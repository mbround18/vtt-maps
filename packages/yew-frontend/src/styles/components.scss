@use "variables" as vars;
@use "mixins";
@use "catalog";

.card-grid {
  @include mixins.grid(
    auto-fill minmax(vars.$card-min-width, 1fr),
    vars.$spacing-medium
  );

  @include mixins.respond(sm) {
    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
  }

  @include mixins.respond(md) {
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  }
}

.panel {
  @include mixins.card;
  padding: vars.$spacing-medium;
  margin-bottom: vars.$spacing-medium;
}

.alert {
  padding: vars.$spacing-medium;
  border-radius: vars.$border-radius-medium;
  margin-bottom: vars.$spacing-medium;

  &-info {
    background-color: rgba(vars.$info-color, 0.1);
    border-left: 4px solid vars.$info-color;
    color: vars.$info-color;
  }

  &-error {
    background-color: rgba(vars.$error-color, 0.1);
    border-left: 4px solid vars.$error-color;
    color: vars.$error-color;
  }

  &-warning {
    background-color: rgba(vars.$warn-color, 0.1);
    border-left: 4px solid vars.$warn-color;
    color: vars.$warn-color;
  }

  &-success {
    background-color: rgba(vars.$info-color, 0.1);
    border-left: 4px solid vars.$info-color;
    color: vars.$info-color;
  }
}

.badge {
  display: inline-block;
  padding: vars.$spacing-xs vars.$spacing-small;
  font-size: 0.75rem;
  font-weight: 600;
  border-radius: 9999px;

  &-primary {
    background-color: vars.$accent-color;
    color: white;
  }

  &-secondary {
    background-color: vars.$secondary-color;
    color: vars.$text-color;
  }
}

.avatar {
  border-radius: 50%;
  object-fit: cover;

  &-sm {
    width: 32px;
    height: 32px;
  }

  &-md {
    width: 48px;
    height: 48px;
  }

  &-lg {
    width: 64px;
    height: 64px;
  }
}

.form-group {
  margin-bottom: vars.$spacing-medium;
}

.form-label {
  display: block;
  margin-bottom: vars.$spacing-xs;
  font-weight: 500;
}

.form-input {
  width: 100%;
  padding: vars.$spacing-small;
  border: 1px solid rgba(vars.$text-color, 0.2);
  border-radius: vars.$border-radius-small;
  background-color: transparent;
  color: vars.$text-color;

  &:focus {
    border-color: vars.$accent-color;
    outline: none;
  }
}

.form-select {
  @extend .form-input;
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 0.5rem center;
  background-size: 1em;
}

.loader {
  display: inline-block;
  width: 1em;
  height: 1em;
  border: 2px solid rgba(vars.$accent-color, 0.3);
  border-radius: 50%;
  border-top-color: vars.$accent-color;
  animation: loader-spin 0.8s linear infinite;
}

@keyframes loader-spin {
  to {
    transform: rotate(360deg);
  }
}

.mosaic {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  grid-auto-rows: 200px;
  grid-auto-flow: dense;
  gap: vars.$spacing-small;

  @include mixins.respond(sm) {
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
  }

  .mosaic-item {
    &.wide {
      grid-column: span 2;
    }
    &.tall {
      grid-row: span 2;
    }
    &.large {
      grid-column: span 2;
      grid-row: span 2;
    }

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: vars.$border-radius-small;
      transition: transform 0.3s ease;

      &:hover {
        transform: scale(1.03);
      }
    }
  }
}
